version: '3.7'

services:
  nginx:
    container_name: ${APP_NAME}-nginx
    build:
      context: .
      dockerfile: docker/nginx/prod.Dockerfile
    deploy:
      restart_policy:
        condition: any
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik
        - traefik.http.routers.anti_cafe_manager.entrypoints=websecure
        - traefik.http.services.anti_cafe_manager.loadbalancer.server.port=${NGINX_PORT}
        - traefik.http.routers.anti_cafe_manager.rule=Host(`${DOMAIN}`)
        - traefik.http.services.anti_cafe_manager.loadbalancer.passhostheader=true
    environment:
      DOMAIN: ${DOMAIN}
      API_PORT: ${API_PORT}
    networks:
      - anti_cafe_manager
      - traefik

  api:
    container_name: ${APP_NAME}-api
    build:
      context: .
      dockerfile: docker/api/prod.Dockerfile
    deploy:
      restart_policy:
        condition: any
      mode: replicated
      replicas: 1
      labels:
        - anti_cafe_manager.enable=true
        - anti_cafe_manager.docker.network=anti_cafe_manager
        - anti_cafe_manager.http.routers.anti_cafe_manager.entrypoints=websecure
        - anti_cafe_manager.http.routers.anti_cafe_manager.rule=Host(`rezone-service.ru.ru`)
        - anti_cafe_manager.http.services.anti_cafe_manager.loadbalancer.passhostheader=true
    networks:
      - anti_cafe_manager
      - postgres-db

networks:
  anti_cafe_manager:
   driver: bridge
  traefik:
    external: true
  postgres-db:
    external: true
